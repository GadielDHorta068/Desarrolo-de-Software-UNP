services:
  db:
    image: postgres:16
    container_name: raffy-db-prod
    env_file:
      - docker/db.env
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raffy_user -d raffy_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - raffy-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: raffy-backend-prod
    env_file:
      - docker/backend.env
      - docker/db.env
    ports:
      - "8080:8080"
    volumes: []
    depends_on:
      db:
        condition: service_healthy
    networks:
      - raffy-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: raffy-frontend-prod
    working_dir: /app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    env_file:
      - docker/frontend-prod.env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
      - NODE_ENV=production
      - NG_CLI_ANALYTICS=false
    depends_on: []
    restart: unless-stopped
    networks:
      - raffy-network
  
volumes:
  postgres_data:
  db_data:
  frontend_node_modules:
      
networks:
  raffy-network:
    driver: bridge
