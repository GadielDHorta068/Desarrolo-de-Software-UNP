services:
  db:
    image: postgres:16
    container_name: raffy-db
    env_file:
      - docker/db.env
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raffy_user -d raffy_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - raffy-network
    restart: unless-stopped
  

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: raffy-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@raffy.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin-servers.json:/pgadmin4/servers.json:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - raffy-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: raffy-backend
    env_file:
      - docker/db.env
    environment:
      # Variables para integración con Evolution API dentro de la red de Docker
      EVOLUTION_API_URL: http://evolution-api:8080
      # Reutiliza la misma API key que usa el contenedor evolution-api; si no está definida, usa 'raffify2025'
      EVOLUTION_API_KEY: ${EVOLUTION_API_KEY:-raffify2025}
      EVOLUTION_INSTANCE: Rafify
      DATABASE_PROVIDER: postgresql 
    ports:
      - "${APP_PORT:-8080}:8080"
    volumes: []
    depends_on:
      db:
        condition: service_healthy
    networks:
      - raffy-network
    restart: unless-stopped
    
  evolution-api:
    image: atendai/evolution-api:latest
    container_name: evolution-api
    environment:
      # Clave de autenticación requerida por Evolution API (header 'apikey')
      AUTHENTICATION_TYPE: apikey
      AUTHENTICATION_API_KEY: ${EVOLUTION_API_KEY:-raffify2025}
      # Versión del cliente WhatsApp Web que Baileys debe emular.
      # Actualiza este valor cuando WhatsApp Web cambie y no se genere QR.
      CONFIG_SESSION_PHONE_VERSION: "2.3000.1025195125"
      # Configuración de base de datos requerida por Evolution API v2
      DATABASE_ENABLED: "true"
      DATABASE_PROVIDER: postgresql
      DATABASE_CONNECTION_URI: postgresql://raffy_user:raffy_password@db:5432/raffy_db?schema=evolution
      # Cache con Redis
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: redis://redis:6379
      CACHE_LOCAL_ENABLED: "false"

      OPEN_API_KEY: "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"
      OPENAI_MODEL: "cognitivecomputations/dolphin-mistral-24b-venice-edition:free"
      OPENAI_BASE_URL: "https://openrouter.ai/api/v1"
      OPENAI_ACTIVE: "true"
      OPENAI_SYSTEM_MESSAGE: "Tenes la personalidad oscuro, humor negro. Tus contestaciones son tratando al otro de tonto"
    ports:
      # Exponer para acceder a swagger/manager desde host; backend usa el nombre de servicio en la red
      - "8081:8080"
    volumes:
      - evolution_store:/evolution/store
      - evolution_instances:/evolution/instances
    networks:
      - raffy-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: raffy-redis
    volumes:
      - redis_data:/data
    networks:
      - raffy-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: raffy-frontend
    working_dir: /app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
      - NG_CLI_ANALYTICS=false
    depends_on: []
    restart: unless-stopped
    networks:
      - raffy-network

  proxy:
    image: nginx:alpine
    container_name: raffy-proxy
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - raffy-network
    restart: unless-stopped
  
volumes:
  postgres_data:
  db_data:
  pgadmin_data:
  frontend_node_modules:
  evolution_store:
  evolution_instances:
  redis_data:
      
networks:
  raffy-network:
    driver: bridge